// Amalgam network message schema.

namespace AM.fb;

// ################################
// ## Connection 
// ################################
table ConnectionRequest {
    playerName:string;
}

table ConnectionResponse {
    // The tick that the server sent this response on.
    currentTick:uint;
    
    // ID for the player entity.
    entityID:uint;
    
    // Position (new player or last logout).
    x:float;
    y:float;
}

// ################################
// ## Entity
// ################################
enum InputState:byte {
    Invalid,
    Pressed,
    Released
}

table InputComponent {
    inputStates:[InputState];
}

table PositionComponent {
    x:float;
    y:float;
}

table MovementComponent {
    velX:float;
    velY:float;
    maxVelX:float;
    maxVelY:float;
}

struct Rect {
    x:int;
    y:int;
    w:int;
    h:int;
}
struct SpriteComponent {
    textureID:short;
    posInTexture:Rect;
    posInWorld:Rect;
}

table Entity {
    id:uint;
    name:string;
    flags:int;
    inputComponent:InputComponent;
    positionComponent:PositionComponent;
    movementComponent:MovementComponent;
    //spriteComponent:SpriteComponent; Not yet in use.
}

table EntityUpdate {
    // The tick that the server sent this response on.
    currentTick:uint;
    
    entities:[Entity];
}

// ################################
// ## Message
// ################################
union MessageContent {
    ConnectionRequest,
    ConnectionResponse,
    EntityUpdate
}

table Message {
    content:MessageContent;
}

root_type Message;